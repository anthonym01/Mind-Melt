
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programnonassocIS_LESS_THANIS_GREATER_THANIS_EQUAL_TOIS_NOT_EQUAL_TOGREATER_THAN_OR_EQUAL_TOLESS_THAN_OR_EQUAL_TOleftPLUSMINUSleftTIMESDIVIDErightPOWERAND CHARACTER COMMA COMMENT DECREASE DIVIDE DO ELSE EQUAL FOR FUNCTION GREATER_THAN_OR_EQUAL_TO IDENTIFIER IF IN INCREASE INTEGER IS_EQUAL_TO IS_GREATER_THAN IS_LESS_THAN IS_NOT_EQUAL_TO JOIN LBRACE LBRACKET LESS_THAN_OR_EQUAL_TO LET LETTER LPAREN MINUS NOT NUMBER OR PLUS POWER RBRACE RBRACKET REAL RETURN RISK RPAREN SAVE SHOW STRING_LITERAL THEN TIMES WHILE\n    program : statements\n            | expression\n    \n    statements : statements statement\n               | statement\n    \n    statement : assignment\n              | conditional\n              | loop\n              | function\n              | display\n              | input\n    \n    assignment : LET IDENTIFIER EQUAL expression\n    \n    comment : COMMENT\n    conditional : IF condition THEN statements else_statements_opt\n    else_statements_opt : ELSE statements\n                        | empty\n    condition : expression IS_LESS_THAN expression\n                 | expression IS_EQUAL_TO expression\n                 | expression IS_GREATER_THAN expression\n                 | expression IS_NOT_EQUAL_TO expression\n                 | expression GREATER_THAN_OR_EQUAL_TO expression\n                 | expression LESS_THAN_OR_EQUAL_TO expression\n    expression : expression PLUS term\n               | expression MINUS term\n               | term\n               | expression POWER term\n               | NOT expression\n               | LPAREN expression RPAREN\n               | NUMBER MINUS term\n               | REAL MINUS term\n               | CHARACTER PLUS term\n               | list\n    term : term TIMES factor\n            | term DIVIDE factor\n            | factorfactor : NUMBER\n              | LPAREN expression RPARENinput : LET IDENTIFIER EQUAL SHOW IDENTIFIER LPAREN STRING_LITERAL RPAREN\n    display : SHOW expression\n            | SHOW STRING_LITERAL\n            | SHOW IDENTIFIER\n            | SHOW NUMBER\n            | SHOW REAL\n            | SHOW CHARACTER\n            | SHOW list\n            | SHOW function\n            | SHOW conditional\n            | SHOW loop\n            | SHOW input\n            | SHOW comment\n            | SHOW program\n            | SHOW statements\n            | SHOW expression_list\n            | SHOW assignment\n            | SHOW display\n    loop : FOR IDENTIFIER IN list DO statements\n            | WHILE condition DO statementslist : LBRACKET expression_list RBRACKET\n            | emptyexpression_list : expression\n                       | expression_list COMMA expressionfunction : FUNCTION IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE return_statement_opt RBRACEparameters : IDENTIFIER\n                  | parameters COMMA IDENTIFIER\n    return_statement_opt : RETURN expression\n                         | empty\n    \n    empty : \n    '
    
_lr_action_items = {'NOT':([0,6,7,19,22,24,26,67,77,78,80,81,82,83,84,85,105,124,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'LPAREN':([0,6,7,19,22,24,26,28,29,30,31,32,35,36,37,45,67,77,78,80,81,82,83,84,85,105,107,124,],[7,7,7,7,7,7,7,67,67,67,67,67,67,67,67,88,7,7,7,7,7,7,7,7,7,7,114,7,]),'NUMBER':([0,6,7,19,22,24,26,28,29,30,31,32,35,36,37,67,77,78,80,81,82,83,84,85,105,124,],[8,8,8,8,8,8,49,66,66,66,66,66,66,66,66,8,8,8,8,8,8,8,8,8,8,8,]),'REAL':([0,6,7,19,22,24,26,67,77,78,80,81,82,83,84,85,105,124,],[9,9,9,9,9,9,50,9,9,9,9,9,9,9,9,9,9,9,]),'CHARACTER':([0,6,7,19,22,24,26,67,77,78,80,81,82,83,84,85,105,124,],[10,10,10,10,10,10,51,10,10,10,10,10,10,10,10,10,10,10,]),'LBRACKET':([0,6,7,19,22,24,26,67,77,78,80,81,82,83,84,85,86,105,124,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'LET':([0,2,4,5,6,8,11,12,13,14,15,16,17,18,20,26,27,33,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,87,91,92,94,102,105,106,108,109,110,111,115,116,117,120,121,126,],[21,21,-4,-24,-66,-35,-31,-5,-6,-7,-8,-9,-10,-34,-58,63,-3,-26,-2,-39,-40,-35,-42,-43,-31,-8,-6,-7,-10,-49,-50,21,-52,-5,-9,-12,-22,-35,-23,-25,-32,-33,-27,-28,-29,-30,-57,-66,-66,21,21,-60,-11,21,21,-66,-36,-13,21,-15,21,21,21,21,21,-37,-61,]),'IF':([0,2,4,5,6,8,11,12,13,14,15,16,17,18,20,26,27,33,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,87,91,92,94,102,105,106,108,109,110,111,115,116,117,120,121,126,],[22,22,-4,-24,-66,-35,-31,-5,-6,-7,-8,-9,-10,-34,-58,22,-3,-26,-2,-39,-40,-35,-42,-43,-31,-8,-6,-7,-10,-49,-50,22,-52,-5,-9,-12,-22,-35,-23,-25,-32,-33,-27,-28,-29,-30,-57,-66,-66,22,22,-60,-11,22,22,-66,-36,-13,22,-15,22,22,22,22,22,-37,-61,]),'FOR':([0,2,4,5,6,8,11,12,13,14,15,16,17,18,20,26,27,33,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,87,91,92,94,102,105,106,108,109,110,111,115,116,117,120,121,126,],[23,23,-4,-24,-66,-35,-31,-5,-6,-7,-8,-9,-10,-34,-58,23,-3,-26,-2,-39,-40,-35,-42,-43,-31,-8,-6,-7,-10,-49,-50,23,-52,-5,-9,-12,-22,-35,-23,-25,-32,-33,-27,-28,-29,-30,-57,-66,-66,23,23,-60,-11,23,23,-66,-36,-13,23,-15,23,23,23,23,23,-37,-61,]),'WHILE':([0,2,4,5,6,8,11,12,13,14,15,16,17,18,20,26,27,33,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,87,91,92,94,102,105,106,108,109,110,111,115,116,117,120,121,126,],[24,24,-4,-24,-66,-35,-31,-5,-6,-7,-8,-9,-10,-34,-58,24,-3,-26,-2,-39,-40,-35,-42,-43,-31,-8,-6,-7,-10,-49,-50,24,-52,-5,-9,-12,-22,-35,-23,-25,-32,-33,-27,-28,-29,-30,-57,-66,-66,24,24,-60,-11,24,24,-66,-36,-13,24,-15,24,24,24,24,24,-37,-61,]),'FUNCTION':([0,2,4,5,6,8,11,12,13,14,15,16,17,18,20,26,27,33,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,87,91,92,94,102,105,106,108,109,110,111,115,116,117,120,121,126,],[25,25,-4,-24,-66,-35,-31,-5,-6,-7,-8,-9,-10,-34,-58,25,-3,-26,-2,-39,-40,-35,-42,-43,-31,-8,-6,-7,-10,-49,-50,25,-52,-5,-9,-12,-22,-35,-23,-25,-32,-33,-27,-28,-29,-30,-57,-66,-66,25,25,-60,-11,25,25,-66,-36,-13,25,-15,25,25,25,25,25,-37,-61,]),'SHOW':([0,2,4,5,6,8,11,12,13,14,15,16,17,18,20,26,27,33,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,87,91,92,94,102,105,106,108,109,110,111,115,116,117,120,121,126,],[26,26,-4,-24,-66,-35,-31,-5,-6,-7,-8,-9,-10,-34,-58,26,-3,-26,-2,-39,-40,-35,-42,-43,-31,-8,-6,-7,-10,-49,-50,26,-52,-5,-9,-12,-22,-35,-23,-25,-32,-33,-27,-28,-29,-30,-57,-66,93,26,26,-60,-11,26,26,93,-36,-13,26,-15,26,26,26,26,26,-37,-61,]),'PLUS':([0,3,5,6,7,8,10,11,18,19,20,22,24,26,33,34,39,42,46,49,51,52,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,90,91,92,95,96,97,98,99,100,105,106,124,127,],[-66,28,-24,-66,-66,-35,37,-31,-34,-66,-58,-66,-66,-66,28,28,28,28,28,-35,37,-31,-22,-35,-66,-23,-25,-32,-33,-27,-28,-29,-30,-57,-66,-66,-66,-66,-66,-66,-66,-66,28,28,28,28,28,28,28,28,28,-66,-36,-66,28,]),'MINUS':([0,3,5,6,7,8,9,11,18,19,20,22,24,26,33,34,39,42,46,49,50,52,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,90,91,92,95,96,97,98,99,100,105,106,124,127,],[-66,29,-24,-66,-66,35,36,-31,-34,-66,-58,-66,-66,-66,29,29,29,29,29,35,36,-31,-22,-35,-66,-23,-25,-32,-33,-27,-28,-29,-30,-57,-66,-66,-66,-66,-66,-66,-66,-66,29,29,29,29,29,29,29,29,29,-66,-36,-66,29,]),'POWER':([0,3,5,6,7,8,11,18,19,20,22,24,26,33,34,39,42,46,49,52,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,90,91,92,95,96,97,98,99,100,105,106,124,127,],[-66,30,-24,-66,-66,-35,-31,-34,-66,-58,-66,-66,-66,30,30,30,30,30,-35,-31,-22,-35,-66,-23,-25,-32,-33,-27,-28,-29,-30,-57,-66,-66,-66,-66,-66,-66,-66,-66,30,30,30,30,30,30,30,30,30,-66,-36,-66,30,]),'$end':([0,1,2,3,4,5,6,8,11,12,13,14,15,16,17,18,20,26,27,33,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,68,69,70,71,72,73,74,75,76,77,78,91,92,94,102,105,106,108,110,115,116,121,126,],[-66,0,-1,-2,-4,-24,-66,-35,-31,-5,-6,-7,-8,-9,-10,-34,-58,-66,-3,-26,-2,-39,-40,-35,-42,-43,-31,-8,-6,-7,-10,-49,-50,-1,-52,-5,-9,-12,-22,-35,-23,-25,-32,-33,-27,-28,-29,-30,-57,-66,-66,-60,-11,-66,-56,-66,-36,-13,-15,-14,-55,-37,-61,]),'ELSE':([4,5,6,8,11,12,13,14,15,16,17,18,20,26,27,33,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,68,69,70,71,72,73,74,75,76,77,78,91,92,94,102,105,106,108,110,115,116,121,126,],[-4,-24,-66,-35,-31,-5,-6,-7,-8,-9,-10,-34,-58,-66,-3,-26,-2,-39,-40,-35,-42,-43,-31,-8,-6,-7,-10,-49,-50,-1,-52,-5,-9,-12,-22,-35,-23,-25,-32,-33,-27,-28,-29,-30,-57,-66,-66,-60,-11,109,-56,-66,-36,-13,-15,-14,-55,-37,-61,]),'RBRACE':([4,5,6,8,11,12,13,14,15,16,17,18,20,26,27,33,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,68,69,70,71,72,73,74,75,76,77,78,91,92,94,102,105,106,108,110,115,116,120,121,122,123,124,125,126,127,],[-4,-24,-66,-35,-31,-5,-6,-7,-8,-9,-10,-34,-58,-66,-3,-26,-2,-39,-40,-35,-42,-43,-31,-8,-6,-7,-10,-49,-50,-1,-52,-5,-9,-12,-22,-35,-23,-25,-32,-33,-27,-28,-29,-30,-57,-66,-66,-60,-11,-66,-56,-66,-36,-13,-15,-14,-55,122,-37,-66,126,-66,-65,-61,-64,]),'RPAREN':([5,6,7,8,11,18,20,33,34,65,66,67,68,69,70,71,72,73,74,75,76,90,103,104,106,118,119,],[-24,-66,-66,-35,-31,-34,-58,-26,72,-22,-35,-66,-23,-25,-32,-33,-27,-28,-29,-30,-57,106,-62,112,-36,-63,121,]),'RBRACKET':([5,6,8,11,18,19,20,33,38,39,65,66,68,69,70,71,72,73,74,75,76,77,91,106,],[-24,-66,-35,-31,-34,-66,-58,-26,76,-59,-22,-35,-23,-25,-32,-33,-27,-28,-29,-30,-57,-66,-60,-36,]),'COMMA':([5,6,8,11,18,19,20,26,33,38,39,46,49,52,60,65,66,68,69,70,71,72,73,74,75,76,77,91,103,104,106,118,],[-24,-66,-35,-31,-34,-66,-58,-66,-26,77,-59,-59,-35,-31,77,-22,-35,-23,-25,-32,-33,-27,-28,-29,-30,-57,-66,-60,-62,113,-36,-63,]),'IS_LESS_THAN':([5,6,8,11,18,20,22,24,33,42,65,66,68,69,70,71,72,73,74,75,76,106,],[-24,-66,-35,-31,-34,-58,-66,-66,-26,80,-22,-35,-23,-25,-32,-33,-27,-28,-29,-30,-57,-36,]),'IS_EQUAL_TO':([5,6,8,11,18,20,22,24,33,42,65,66,68,69,70,71,72,73,74,75,76,106,],[-24,-66,-35,-31,-34,-58,-66,-66,-26,81,-22,-35,-23,-25,-32,-33,-27,-28,-29,-30,-57,-36,]),'IS_GREATER_THAN':([5,6,8,11,18,20,22,24,33,42,65,66,68,69,70,71,72,73,74,75,76,106,],[-24,-66,-35,-31,-34,-58,-66,-66,-26,82,-22,-35,-23,-25,-32,-33,-27,-28,-29,-30,-57,-36,]),'IS_NOT_EQUAL_TO':([5,6,8,11,18,20,22,24,33,42,65,66,68,69,70,71,72,73,74,75,76,106,],[-24,-66,-35,-31,-34,-58,-66,-66,-26,83,-22,-35,-23,-25,-32,-33,-27,-28,-29,-30,-57,-36,]),'GREATER_THAN_OR_EQUAL_TO':([5,6,8,11,18,20,22,24,33,42,65,66,68,69,70,71,72,73,74,75,76,106,],[-24,-66,-35,-31,-34,-58,-66,-66,-26,84,-22,-35,-23,-25,-32,-33,-27,-28,-29,-30,-57,-36,]),'LESS_THAN_OR_EQUAL_TO':([5,6,8,11,18,20,22,24,33,42,65,66,68,69,70,71,72,73,74,75,76,106,],[-24,-66,-35,-31,-34,-58,-66,-66,-26,85,-22,-35,-23,-25,-32,-33,-27,-28,-29,-30,-57,-36,]),'THEN':([5,6,8,11,18,20,33,41,65,66,68,69,70,71,72,73,74,75,76,80,81,82,83,84,85,95,96,97,98,99,100,106,],[-24,-66,-35,-31,-34,-58,-26,79,-22,-35,-23,-25,-32,-33,-27,-28,-29,-30,-57,-66,-66,-66,-66,-66,-66,-16,-17,-18,-19,-20,-21,-36,]),'DO':([5,6,8,11,18,20,33,44,65,66,68,69,70,71,72,73,74,75,76,80,81,82,83,84,85,86,95,96,97,98,99,100,101,106,],[-24,-66,-35,-31,-34,-58,-26,87,-22,-35,-23,-25,-32,-33,-27,-28,-29,-30,-57,-66,-66,-66,-66,-66,-66,-66,-16,-17,-18,-19,-20,-21,111,-36,]),'TIMES':([5,8,18,49,65,66,68,69,70,71,72,73,74,75,106,],[31,-35,-34,-35,31,-35,31,31,-32,-33,-36,31,31,31,-36,]),'DIVIDE':([5,8,18,49,65,66,68,69,70,71,72,73,74,75,106,],[32,-35,-34,-35,32,-35,32,32,-32,-33,-36,32,32,32,-36,]),'IDENTIFIER':([21,23,25,26,63,88,93,113,],[40,43,45,48,89,103,107,118,]),'STRING_LITERAL':([26,114,],[47,119,]),'COMMENT':([26,],[64,]),'EQUAL':([40,89,],[78,105,]),'IN':([43,],[86,]),'LBRACE':([112,],[117,]),'RETURN':([122,],[124,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,26,],[1,58,]),'statements':([0,26,79,87,109,111,117,],[2,59,94,102,115,116,120,]),'expression':([0,6,7,19,22,24,26,67,77,78,80,81,82,83,84,85,105,124,],[3,33,34,39,42,42,46,90,91,92,95,96,97,98,99,100,92,127,]),'statement':([0,2,26,59,79,87,94,102,109,111,115,116,117,120,],[4,27,4,27,4,4,27,27,4,4,27,27,4,27,]),'term':([0,6,7,19,22,24,26,28,29,30,35,36,37,67,77,78,80,81,82,83,84,85,105,124,],[5,5,5,5,5,5,5,65,68,69,73,74,75,5,5,5,5,5,5,5,5,5,5,5,]),'list':([0,6,7,19,22,24,26,67,77,78,80,81,82,83,84,85,86,105,124,],[11,11,11,11,11,11,52,11,11,11,11,11,11,11,11,11,101,11,11,]),'assignment':([0,2,26,59,79,87,94,102,109,111,115,116,117,120,],[12,12,61,12,12,12,12,12,12,12,12,12,12,12,]),'conditional':([0,2,26,59,79,87,94,102,109,111,115,116,117,120,],[13,13,54,13,13,13,13,13,13,13,13,13,13,13,]),'loop':([0,2,26,59,79,87,94,102,109,111,115,116,117,120,],[14,14,55,14,14,14,14,14,14,14,14,14,14,14,]),'function':([0,2,26,59,79,87,94,102,109,111,115,116,117,120,],[15,15,53,15,15,15,15,15,15,15,15,15,15,15,]),'display':([0,2,26,59,79,87,94,102,109,111,115,116,117,120,],[16,16,62,16,16,16,16,16,16,16,16,16,16,16,]),'input':([0,2,26,59,79,87,94,102,109,111,115,116,117,120,],[17,17,56,17,17,17,17,17,17,17,17,17,17,17,]),'factor':([0,6,7,19,22,24,26,28,29,30,31,32,35,36,37,67,77,78,80,81,82,83,84,85,105,124,],[18,18,18,18,18,18,18,18,18,18,70,71,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'empty':([0,6,7,19,22,24,26,67,77,78,80,81,82,83,84,85,86,94,105,122,124,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,110,20,125,20,]),'expression_list':([19,26,],[38,60,]),'condition':([22,24,],[41,44,]),'comment':([26,],[57,]),'parameters':([88,],[104,]),'else_statements_opt':([94,],[108,]),'return_statement_opt':([122,],[123,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','yacc.py',20),
  ('program -> expression','program',1,'p_program','yacc.py',21),
  ('statements -> statements statement','statements',2,'p_statements','yacc.py',27),
  ('statements -> statement','statements',1,'p_statements','yacc.py',28),
  ('statement -> assignment','statement',1,'p_statement','yacc.py',40),
  ('statement -> conditional','statement',1,'p_statement','yacc.py',41),
  ('statement -> loop','statement',1,'p_statement','yacc.py',42),
  ('statement -> function','statement',1,'p_statement','yacc.py',43),
  ('statement -> display','statement',1,'p_statement','yacc.py',44),
  ('statement -> input','statement',1,'p_statement','yacc.py',45),
  ('assignment -> LET IDENTIFIER EQUAL expression','assignment',4,'p_assignment','yacc.py',52),
  ('comment -> COMMENT','comment',1,'p_comment','yacc.py',59),
  ('conditional -> IF condition THEN statements else_statements_opt','conditional',5,'p_conditional','yacc.py',64),
  ('else_statements_opt -> ELSE statements','else_statements_opt',2,'p_else_statements_opt','yacc.py',69),
  ('else_statements_opt -> empty','else_statements_opt',1,'p_else_statements_opt','yacc.py',70),
  ('condition -> expression IS_LESS_THAN expression','condition',3,'p_condition','yacc.py',77),
  ('condition -> expression IS_EQUAL_TO expression','condition',3,'p_condition','yacc.py',78),
  ('condition -> expression IS_GREATER_THAN expression','condition',3,'p_condition','yacc.py',79),
  ('condition -> expression IS_NOT_EQUAL_TO expression','condition',3,'p_condition','yacc.py',80),
  ('condition -> expression GREATER_THAN_OR_EQUAL_TO expression','condition',3,'p_condition','yacc.py',81),
  ('condition -> expression LESS_THAN_OR_EQUAL_TO expression','condition',3,'p_condition','yacc.py',82),
  ('expression -> expression PLUS term','expression',3,'p_expression','yacc.py',87),
  ('expression -> expression MINUS term','expression',3,'p_expression','yacc.py',88),
  ('expression -> term','expression',1,'p_expression','yacc.py',89),
  ('expression -> expression POWER term','expression',3,'p_expression','yacc.py',90),
  ('expression -> NOT expression','expression',2,'p_expression','yacc.py',91),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','yacc.py',92),
  ('expression -> NUMBER MINUS term','expression',3,'p_expression','yacc.py',93),
  ('expression -> REAL MINUS term','expression',3,'p_expression','yacc.py',94),
  ('expression -> CHARACTER PLUS term','expression',3,'p_expression','yacc.py',95),
  ('expression -> list','expression',1,'p_expression','yacc.py',96),
  ('term -> term TIMES factor','term',3,'p_term','yacc.py',116),
  ('term -> term DIVIDE factor','term',3,'p_term','yacc.py',117),
  ('term -> factor','term',1,'p_term','yacc.py',118),
  ('factor -> NUMBER','factor',1,'p_factor','yacc.py',128),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','yacc.py',129),
  ('input -> LET IDENTIFIER EQUAL SHOW IDENTIFIER LPAREN STRING_LITERAL RPAREN','input',8,'p_input','yacc.py',136),
  ('display -> SHOW expression','display',2,'p_display','yacc.py',141),
  ('display -> SHOW STRING_LITERAL','display',2,'p_display','yacc.py',142),
  ('display -> SHOW IDENTIFIER','display',2,'p_display','yacc.py',143),
  ('display -> SHOW NUMBER','display',2,'p_display','yacc.py',144),
  ('display -> SHOW REAL','display',2,'p_display','yacc.py',145),
  ('display -> SHOW CHARACTER','display',2,'p_display','yacc.py',146),
  ('display -> SHOW list','display',2,'p_display','yacc.py',147),
  ('display -> SHOW function','display',2,'p_display','yacc.py',148),
  ('display -> SHOW conditional','display',2,'p_display','yacc.py',149),
  ('display -> SHOW loop','display',2,'p_display','yacc.py',150),
  ('display -> SHOW input','display',2,'p_display','yacc.py',151),
  ('display -> SHOW comment','display',2,'p_display','yacc.py',152),
  ('display -> SHOW program','display',2,'p_display','yacc.py',153),
  ('display -> SHOW statements','display',2,'p_display','yacc.py',154),
  ('display -> SHOW expression_list','display',2,'p_display','yacc.py',155),
  ('display -> SHOW assignment','display',2,'p_display','yacc.py',156),
  ('display -> SHOW display','display',2,'p_display','yacc.py',157),
  ('loop -> FOR IDENTIFIER IN list DO statements','loop',6,'p_loop','yacc.py',162),
  ('loop -> WHILE condition DO statements','loop',4,'p_loop','yacc.py',163),
  ('list -> LBRACKET expression_list RBRACKET','list',3,'p_list','yacc.py',168),
  ('list -> empty','list',1,'p_list','yacc.py',169),
  ('expression_list -> expression','expression_list',1,'p_expression_list','yacc.py',175),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','yacc.py',176),
  ('function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE return_statement_opt RBRACE','function',10,'p_function','yacc.py',183),
  ('parameters -> IDENTIFIER','parameters',1,'p_parameters','yacc.py',187),
  ('parameters -> parameters COMMA IDENTIFIER','parameters',3,'p_parameters','yacc.py',188),
  ('return_statement_opt -> RETURN expression','return_statement_opt',2,'p_return_statement_opt','yacc.py',196),
  ('return_statement_opt -> empty','return_statement_opt',1,'p_return_statement_opt','yacc.py',197),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',205),
]
