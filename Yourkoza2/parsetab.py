
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programnonassocIS_LESS_THANIS_GREATER_THANIS_EQUAL_TOIS_NOT_EQUAL_TOGREATER_THAN_OR_EQUAL_TOLESS_THAN_OR_EQUAL_TOleftPLUSMINUSleftTIMESDIVIDErightPOWERAND CHARACTER COMMA COMMENT DECREASE DIVIDE DO ELSE EQUAL FOR FUNCTION GREATER_THAN_OR_EQUAL_TO IDENTIFIER IF IN INCREASE INTEGER IS_EQUAL_TO IS_GREATER_THAN IS_LESS_THAN IS_NOT_EQUAL_TO JOIN LBRACE LBRACKET LESS_THAN_OR_EQUAL_TO LET LETTER LPAREN MINUS NOT NUMBER OR PLUS POWER RBRACE RBRACKET REAL RETURN RISK RPAREN SAVE SHOW STRING_LITERAL THEN TIMES WHILE\n    program : statements\n            | expression\n    \n    statements : statements statement\n               | statement\n    \n    statement : assignment\n              | conditional\n              | loop\n              | function\n              | display\n              | input\n    \n    assignment : LET IDENTIFIER EQUAL expression\n    \n    comment : COMMENT\n    conditional : IF condition THEN statements else_statements_optelse_statements_opt : ELSE statements\n                           | emptycondition : expression IS_LESS_THAN expression\n                 | expression IS_EQUAL_TO expression\n                 | expression IS_GREATER_THAN expression\n                 | expression IS_NOT_EQUAL_TO expression\n                 | expression GREATER_THAN_OR_EQUAL_TO expression\n                 | expression LESS_THAN_OR_EQUAL_TO expression\n    expression : expression PLUS term\n               | expression MINUS term\n               | term\n    term : term TIMES factor\n            | term DIVIDE factor\n            | factorfactor : NUMBER\n              | LPAREN expression RPARENinput : LET IDENTIFIER EQUAL SHOW IDENTIFIER LPAREN STRING_LITERAL RPAREN\n    display : SHOW expression\n            | SHOW STRING_LITERAL\n            | SHOW IDENTIFIER\n            | SHOW NUMBER\n            | SHOW REAL\n            | SHOW CHARACTER\n            | SHOW list\n            | SHOW function\n            | SHOW conditional\n            | SHOW loop\n            | SHOW input\n            | SHOW comment\n            | SHOW program\n            | SHOW statements\n            | SHOW expression_list\n            | SHOW assignment\n            | SHOW display\n    loop : FOR IDENTIFIER IN list DO statements\n            | WHILE condition DO statementslist : LBRACKET expression_list RBRACKET\n            | emptyexpression_list : expression\n                       | expression_list COMMA expressionfunction : FUNCTION IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE return_statement_opt RBRACEparameters : IDENTIFIER\n                  | parameters COMMA IDENTIFIER\n    return_statement_opt : RETURN expression\n                         | empty\n    \n    empty : \n    '
    
_lr_action_items = {'LET':([0,2,4,5,6,7,8,9,10,11,12,19,20,21,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53,54,55,56,57,59,67,69,74,76,84,87,88,91,92,93,94,98,99,100,103,104,109,],[13,13,-4,-24,-5,-6,-7,-8,-9,-10,-27,52,-28,-3,-2,-32,-33,-28,-35,-36,-37,-8,-6,-7,-10,-42,-43,13,-45,-5,-9,-51,-12,-22,-23,-25,-26,13,13,-29,-11,13,13,-53,-50,-13,13,-15,13,13,13,13,13,-30,-54,]),'IF':([0,2,4,5,6,7,8,9,10,11,12,19,20,21,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53,54,55,56,57,59,67,69,74,76,84,87,88,91,92,93,94,98,99,100,103,104,109,],[14,14,-4,-24,-5,-6,-7,-8,-9,-10,-27,14,-28,-3,-2,-32,-33,-28,-35,-36,-37,-8,-6,-7,-10,-42,-43,14,-45,-5,-9,-51,-12,-22,-23,-25,-26,14,14,-29,-11,14,14,-53,-50,-13,14,-15,14,14,14,14,14,-30,-54,]),'FOR':([0,2,4,5,6,7,8,9,10,11,12,19,20,21,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53,54,55,56,57,59,67,69,74,76,84,87,88,91,92,93,94,98,99,100,103,104,109,],[15,15,-4,-24,-5,-6,-7,-8,-9,-10,-27,15,-28,-3,-2,-32,-33,-28,-35,-36,-37,-8,-6,-7,-10,-42,-43,15,-45,-5,-9,-51,-12,-22,-23,-25,-26,15,15,-29,-11,15,15,-53,-50,-13,15,-15,15,15,15,15,15,-30,-54,]),'WHILE':([0,2,4,5,6,7,8,9,10,11,12,19,20,21,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53,54,55,56,57,59,67,69,74,76,84,87,88,91,92,93,94,98,99,100,103,104,109,],[16,16,-4,-24,-5,-6,-7,-8,-9,-10,-27,16,-28,-3,-2,-32,-33,-28,-35,-36,-37,-8,-6,-7,-10,-42,-43,16,-45,-5,-9,-51,-12,-22,-23,-25,-26,16,16,-29,-11,16,16,-53,-50,-13,16,-15,16,16,16,16,16,-30,-54,]),'FUNCTION':([0,2,4,5,6,7,8,9,10,11,12,19,20,21,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53,54,55,56,57,59,67,69,74,76,84,87,88,91,92,93,94,98,99,100,103,104,109,],[17,17,-4,-24,-5,-6,-7,-8,-9,-10,-27,17,-28,-3,-2,-32,-33,-28,-35,-36,-37,-8,-6,-7,-10,-42,-43,17,-45,-5,-9,-51,-12,-22,-23,-25,-26,17,17,-29,-11,17,17,-53,-50,-13,17,-15,17,17,17,17,17,-30,-54,]),'SHOW':([0,2,4,5,6,7,8,9,10,11,12,19,20,21,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53,54,55,56,57,58,59,67,69,74,76,84,87,88,89,91,92,93,94,98,99,100,103,104,109,],[19,19,-4,-24,-5,-6,-7,-8,-9,-10,-27,19,-28,-3,-2,-32,-33,-28,-35,-36,-37,-8,-6,-7,-10,-42,-43,19,-45,-5,-9,-51,-12,-22,-23,-25,-26,75,19,19,-29,-11,19,19,-53,-50,75,-13,19,-15,19,19,19,19,19,-30,-54,]),'NUMBER':([0,14,16,18,19,22,23,24,25,50,58,60,61,62,63,64,65,70,89,107,],[20,20,20,20,36,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'LPAREN':([0,14,16,18,19,22,23,24,25,31,50,58,60,61,62,63,64,65,70,89,90,107,],[18,18,18,18,18,18,18,18,18,68,18,18,18,18,18,18,18,18,18,18,97,18,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,19,20,21,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53,54,55,56,57,69,74,76,84,87,88,91,93,98,99,104,109,],[0,-1,-2,-4,-24,-5,-6,-7,-8,-9,-10,-27,-59,-28,-3,-2,-32,-33,-28,-35,-36,-37,-8,-6,-7,-10,-42,-43,-1,-45,-5,-9,-51,-12,-22,-23,-25,-26,-29,-11,-59,-49,-53,-50,-13,-15,-14,-48,-30,-54,]),'PLUS':([3,5,12,20,28,32,33,36,54,55,56,57,69,72,74,77,78,79,80,81,82,87,110,],[22,-24,-27,-28,22,22,22,-28,-22,-23,-25,-26,-29,22,22,22,22,22,22,22,22,22,22,]),'MINUS':([3,5,12,20,28,32,33,36,54,55,56,57,69,72,74,77,78,79,80,81,82,87,110,],[23,-24,-27,-28,23,23,23,-28,-22,-23,-25,-26,-29,23,23,23,23,23,23,23,23,23,23,]),'ELSE':([4,5,6,7,8,9,10,11,12,19,20,21,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53,54,55,56,57,69,74,76,84,87,88,91,93,98,99,104,109,],[-4,-24,-5,-6,-7,-8,-9,-10,-27,-59,-28,-3,-2,-32,-33,-28,-35,-36,-37,-8,-6,-7,-10,-42,-43,-1,-45,-5,-9,-51,-12,-22,-23,-25,-26,-29,-11,92,-49,-53,-50,-13,-15,-14,-48,-30,-54,]),'RBRACE':([4,5,6,7,8,9,10,11,12,19,20,21,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53,54,55,56,57,69,74,76,84,87,88,91,93,98,99,103,104,105,106,108,109,110,],[-4,-24,-5,-6,-7,-8,-9,-10,-27,-59,-28,-3,-2,-32,-33,-28,-35,-36,-37,-8,-6,-7,-10,-42,-43,-1,-45,-5,-9,-51,-12,-22,-23,-25,-26,-29,-11,-59,-49,-53,-50,-13,-15,-14,-48,105,-30,-59,109,-58,-54,-57,]),'IS_LESS_THAN':([5,12,20,28,54,55,56,57,69,],[-24,-27,-28,60,-22,-23,-25,-26,-29,]),'IS_EQUAL_TO':([5,12,20,28,54,55,56,57,69,],[-24,-27,-28,61,-22,-23,-25,-26,-29,]),'IS_GREATER_THAN':([5,12,20,28,54,55,56,57,69,],[-24,-27,-28,62,-22,-23,-25,-26,-29,]),'IS_NOT_EQUAL_TO':([5,12,20,28,54,55,56,57,69,],[-24,-27,-28,63,-22,-23,-25,-26,-29,]),'GREATER_THAN_OR_EQUAL_TO':([5,12,20,28,54,55,56,57,69,],[-24,-27,-28,64,-22,-23,-25,-26,-29,]),'LESS_THAN_OR_EQUAL_TO':([5,12,20,28,54,55,56,57,69,],[-24,-27,-28,65,-22,-23,-25,-26,-29,]),'RPAREN':([5,12,20,32,54,55,56,57,69,85,86,101,102,],[-24,-27,-28,69,-22,-23,-25,-26,-29,-55,95,-56,104,]),'COMMA':([5,12,20,33,36,47,54,55,56,57,69,71,72,85,86,87,101,],[-24,-27,-28,-52,-28,70,-22,-23,-25,-26,-29,70,-52,-55,96,-53,-56,]),'RBRACKET':([5,12,20,54,55,56,57,69,71,72,87,],[-24,-27,-28,-22,-23,-25,-26,-29,88,-52,-53,]),'THEN':([5,12,20,27,54,55,56,57,69,77,78,79,80,81,82,],[-24,-27,-28,59,-22,-23,-25,-26,-29,-16,-17,-18,-19,-20,-21,]),'DO':([5,12,20,30,51,54,55,56,57,66,69,77,78,79,80,81,82,83,88,],[-24,-27,-28,67,-51,-22,-23,-25,-26,-59,-29,-16,-17,-18,-19,-20,-21,94,-50,]),'TIMES':([5,12,20,36,54,55,56,57,69,],[24,-27,-28,-28,24,24,-25,-26,-29,]),'DIVIDE':([5,12,20,36,54,55,56,57,69,],[25,-27,-28,-28,25,25,-25,-26,-29,]),'IDENTIFIER':([13,15,17,19,52,68,75,96,],[26,29,31,35,73,85,90,101,]),'STRING_LITERAL':([19,97,],[34,102,]),'REAL':([19,],[37,]),'CHARACTER':([19,],[38,]),'LBRACKET':([19,66,],[50,50,]),'COMMENT':([19,],[53,]),'EQUAL':([26,73,],[58,89,]),'IN':([29,],[66,]),'LBRACE':([95,],[100,]),'RETURN':([105,],[107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,19,],[1,45,]),'statements':([0,19,59,67,92,94,100,],[2,46,76,84,98,99,103,]),'expression':([0,14,16,18,19,50,58,60,61,62,63,64,65,70,89,107,],[3,28,28,32,33,72,74,77,78,79,80,81,82,87,74,110,]),'statement':([0,2,19,46,59,67,76,84,92,94,98,99,100,103,],[4,21,4,21,4,4,21,21,4,4,21,21,4,21,]),'term':([0,14,16,18,19,22,23,50,58,60,61,62,63,64,65,70,89,107,],[5,5,5,5,5,54,55,5,5,5,5,5,5,5,5,5,5,5,]),'assignment':([0,2,19,46,59,67,76,84,92,94,98,99,100,103,],[6,6,48,6,6,6,6,6,6,6,6,6,6,6,]),'conditional':([0,2,19,46,59,67,76,84,92,94,98,99,100,103,],[7,7,41,7,7,7,7,7,7,7,7,7,7,7,]),'loop':([0,2,19,46,59,67,76,84,92,94,98,99,100,103,],[8,8,42,8,8,8,8,8,8,8,8,8,8,8,]),'function':([0,2,19,46,59,67,76,84,92,94,98,99,100,103,],[9,9,40,9,9,9,9,9,9,9,9,9,9,9,]),'display':([0,2,19,46,59,67,76,84,92,94,98,99,100,103,],[10,10,49,10,10,10,10,10,10,10,10,10,10,10,]),'input':([0,2,19,46,59,67,76,84,92,94,98,99,100,103,],[11,11,43,11,11,11,11,11,11,11,11,11,11,11,]),'factor':([0,14,16,18,19,22,23,24,25,50,58,60,61,62,63,64,65,70,89,107,],[12,12,12,12,12,12,12,56,57,12,12,12,12,12,12,12,12,12,12,12,]),'condition':([14,16,],[27,30,]),'list':([19,66,],[39,83,]),'comment':([19,],[44,]),'expression_list':([19,50,],[47,71,]),'empty':([19,66,76,105,],[51,51,93,108,]),'parameters':([68,],[86,]),'else_statements_opt':([76,],[91,]),'return_statement_opt':([105,],[106,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','yacc.py',20),
  ('program -> expression','program',1,'p_program','yacc.py',21),
  ('statements -> statements statement','statements',2,'p_statements','yacc.py',27),
  ('statements -> statement','statements',1,'p_statements','yacc.py',28),
  ('statement -> assignment','statement',1,'p_statement','yacc.py',40),
  ('statement -> conditional','statement',1,'p_statement','yacc.py',41),
  ('statement -> loop','statement',1,'p_statement','yacc.py',42),
  ('statement -> function','statement',1,'p_statement','yacc.py',43),
  ('statement -> display','statement',1,'p_statement','yacc.py',44),
  ('statement -> input','statement',1,'p_statement','yacc.py',45),
  ('assignment -> LET IDENTIFIER EQUAL expression','assignment',4,'p_assignment','yacc.py',52),
  ('comment -> COMMENT','comment',1,'p_comment','yacc.py',59),
  ('conditional -> IF condition THEN statements else_statements_opt','conditional',5,'p_conditional','yacc.py',64),
  ('else_statements_opt -> ELSE statements','else_statements_opt',2,'p_else_statements_opt','yacc.py',68),
  ('else_statements_opt -> empty','else_statements_opt',1,'p_else_statements_opt','yacc.py',69),
  ('condition -> expression IS_LESS_THAN expression','condition',3,'p_condition','yacc.py',75),
  ('condition -> expression IS_EQUAL_TO expression','condition',3,'p_condition','yacc.py',76),
  ('condition -> expression IS_GREATER_THAN expression','condition',3,'p_condition','yacc.py',77),
  ('condition -> expression IS_NOT_EQUAL_TO expression','condition',3,'p_condition','yacc.py',78),
  ('condition -> expression GREATER_THAN_OR_EQUAL_TO expression','condition',3,'p_condition','yacc.py',79),
  ('condition -> expression LESS_THAN_OR_EQUAL_TO expression','condition',3,'p_condition','yacc.py',80),
  ('expression -> expression PLUS term','expression',3,'p_expression','yacc.py',85),
  ('expression -> expression MINUS term','expression',3,'p_expression','yacc.py',86),
  ('expression -> term','expression',1,'p_expression','yacc.py',87),
  ('term -> term TIMES factor','term',3,'p_term','yacc.py',98),
  ('term -> term DIVIDE factor','term',3,'p_term','yacc.py',99),
  ('term -> factor','term',1,'p_term','yacc.py',100),
  ('factor -> NUMBER','factor',1,'p_factor','yacc.py',110),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','yacc.py',111),
  ('input -> LET IDENTIFIER EQUAL SHOW IDENTIFIER LPAREN STRING_LITERAL RPAREN','input',8,'p_input','yacc.py',118),
  ('display -> SHOW expression','display',2,'p_display','yacc.py',123),
  ('display -> SHOW STRING_LITERAL','display',2,'p_display','yacc.py',124),
  ('display -> SHOW IDENTIFIER','display',2,'p_display','yacc.py',125),
  ('display -> SHOW NUMBER','display',2,'p_display','yacc.py',126),
  ('display -> SHOW REAL','display',2,'p_display','yacc.py',127),
  ('display -> SHOW CHARACTER','display',2,'p_display','yacc.py',128),
  ('display -> SHOW list','display',2,'p_display','yacc.py',129),
  ('display -> SHOW function','display',2,'p_display','yacc.py',130),
  ('display -> SHOW conditional','display',2,'p_display','yacc.py',131),
  ('display -> SHOW loop','display',2,'p_display','yacc.py',132),
  ('display -> SHOW input','display',2,'p_display','yacc.py',133),
  ('display -> SHOW comment','display',2,'p_display','yacc.py',134),
  ('display -> SHOW program','display',2,'p_display','yacc.py',135),
  ('display -> SHOW statements','display',2,'p_display','yacc.py',136),
  ('display -> SHOW expression_list','display',2,'p_display','yacc.py',137),
  ('display -> SHOW assignment','display',2,'p_display','yacc.py',138),
  ('display -> SHOW display','display',2,'p_display','yacc.py',139),
  ('loop -> FOR IDENTIFIER IN list DO statements','loop',6,'p_loop','yacc.py',144),
  ('loop -> WHILE condition DO statements','loop',4,'p_loop','yacc.py',145),
  ('list -> LBRACKET expression_list RBRACKET','list',3,'p_list','yacc.py',150),
  ('list -> empty','list',1,'p_list','yacc.py',151),
  ('expression_list -> expression','expression_list',1,'p_expression_list','yacc.py',157),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','yacc.py',158),
  ('function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE return_statement_opt RBRACE','function',10,'p_function','yacc.py',165),
  ('parameters -> IDENTIFIER','parameters',1,'p_parameters','yacc.py',169),
  ('parameters -> parameters COMMA IDENTIFIER','parameters',3,'p_parameters','yacc.py',170),
  ('return_statement_opt -> RETURN expression','return_statement_opt',2,'p_return_statement_opt','yacc.py',178),
  ('return_statement_opt -> empty','return_statement_opt',1,'p_return_statement_opt','yacc.py',179),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',187),
]
