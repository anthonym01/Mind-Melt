
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programnonassocIS_LESS_THANIS_GREATER_THANIS_EQUAL_TOIS_NOT_EQUAL_TOGREATER_THAN_OR_EQUAL_TOLESS_THAN_OR_EQUAL_TOleftPLUSMINUSleftTIMESDIVIDErightPOWERAND CHARACTER COMMA COMMENT DECREASE DIVIDE DO ELSE END EQUAL FALSE FOR FUNCTION GREATER_THAN_OR_EQUAL_TO IDENTIFIER IF IN INCREASE INTEGER IS_EQUAL_TO IS_GREATER_THAN IS_LESS_THAN IS_NOT_EQUAL_TO JOIN LBRACE LBRACKET LESS_THAN_OR_EQUAL_TO LET LETTER LPAREN MINUS NOT NUMBER OR PLUS POWER RBRACE RBRACKET REAL RETURN RISK RPAREN SAVE SHOW STRING_LITERAL THEN TIMES TRUE WHILE\n    program : statements\n            | expression\n    \n    statements : statements statement\n               | statement\n    \n    statement : assignment\n              | conditional\n              | loop\n              | function\n              | display\n              | input\n    \n    assignment : LET IDENTIFIER EQUAL expression\n               | LET IDENTIFIER EQUAL expression_list\n               | LET IDENTIFIER EQUAL REAL\n               | LET IDENTIFIER EQUAL NUMBER\n    \n    comment : COMMENT\n    \n    conditional : IF condition THEN statements else_statements_opt END\n    \n    else_statements_opt : ELSE statements\n                        | empty\n    \n    condition : expression IS_LESS_THAN expression\n              | expression IS_EQUAL_TO expression\n              | expression IS_GREATER_THAN expression\n              | expression IS_NOT_EQUAL_TO expression\n              | expression GREATER_THAN_OR_EQUAL_TO expression\n              | expression LESS_THAN_OR_EQUAL_TO expression\n    \n    expression : expression PLUS term\n               | expression MINUS term\n               | term\n               | expression POWER term\n               | NOT expression\n               | LPAREN expression RPAREN\n               | NUMBER MINUS term\n               | REAL MINUS term\n               | CHARACTER PLUS term\n               | list\n    \n    term : term TIMES factor\n         | term DIVIDE factor\n         | IDENTIFIER\n         | factor\n    \n    factor : NUMBER\n           | LPAREN expression RPAREN\n           | REAL\n    \n    input : LET IDENTIFIER EQUAL SHOW IDENTIFIER LPAREN STRING_LITERAL RPAREN\n    \n    display : SHOW expression\n            | SHOW STRING_LITERAL\n            | SHOW IDENTIFIER\n            | SHOW NUMBER\n            | SHOW REAL\n            | SHOW CHARACTER\n            | SHOW list\n            | SHOW function\n            | SHOW conditional\n            | SHOW loop\n            | SHOW input\n            | SHOW comment\n            | SHOW program\n            | SHOW statements\n            | SHOW expression_list\n            | SHOW assignment\n            | SHOW display\n    \n    loop : FOR IDENTIFIER IN list DO statements\n         | WHILE condition DO statements\n         | DO statements WHILE condition\n    \n    list : LBRACKET expression_list RBRACKET\n         | empty\n    \n    expression_list : expression\n                    | expression_list COMMA expression\n                    | empty\n    \n    function : FUNCTION IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE return_statement_opt RBRACE\n    \n    parameters : IDENTIFIER\n               | parameters COMMA IDENTIFIER\n               | empty\n    \n    return_statement_opt : RETURN expression\n                         | empty\n    \n    empty : \n    '
    
_lr_action_items = {'NOT':([0,6,7,20,23,26,28,72,83,84,86,87,88,89,90,91,93,117,137,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'LPAREN':([0,6,7,20,23,26,28,30,31,32,33,34,37,38,39,49,72,83,84,86,87,88,89,90,91,93,117,119,137,],[7,7,7,7,7,7,7,72,72,72,72,72,72,72,72,95,7,7,7,7,7,7,7,7,7,7,7,126,7,]),'NUMBER':([0,6,7,20,23,26,28,30,31,32,33,34,37,38,39,72,83,84,86,87,88,89,90,91,93,117,137,],[8,8,8,8,8,8,53,71,71,71,71,71,71,71,71,8,8,102,8,8,8,8,8,8,8,102,8,]),'REAL':([0,6,7,20,23,26,28,30,31,32,33,34,37,38,39,72,83,84,86,87,88,89,90,91,93,117,137,],[9,9,9,9,9,9,54,73,73,73,73,73,73,73,73,9,9,101,9,9,9,9,9,9,9,101,9,]),'CHARACTER':([0,6,7,20,23,26,28,72,83,84,86,87,88,89,90,91,93,117,137,],[10,10,10,10,10,10,55,10,10,10,10,10,10,10,10,10,10,10,10,]),'IDENTIFIER':([0,6,7,20,22,23,24,26,27,28,30,31,32,37,38,39,68,72,83,84,86,87,88,89,90,91,93,95,103,117,125,137,],[19,19,19,19,43,19,46,19,49,52,19,19,19,19,19,19,96,19,19,19,19,19,19,19,19,19,19,114,119,19,131,19,]),'LBRACKET':([0,6,7,20,23,26,28,72,83,84,86,87,88,89,90,91,92,93,117,137,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'LET':([0,2,4,5,6,8,9,11,12,13,14,15,16,17,18,19,21,25,28,29,35,42,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,100,101,102,104,105,106,107,108,109,110,112,113,117,118,121,123,127,128,129,130,133,134,139,],[22,22,-4,-27,-74,-39,-41,-34,-5,-6,-7,-8,-9,-10,-38,-37,-64,22,68,-3,-29,-64,22,-2,-44,-37,-39,-41,-48,-34,-8,-6,-7,-10,-54,-55,22,-57,-5,-9,-64,-15,-25,-39,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,-74,22,-74,-74,-74,-74,-74,-74,22,-66,-11,-12,-13,-14,22,-19,-20,-21,-22,-23,-24,-62,22,-74,-40,22,22,-16,22,22,22,22,-42,-68,]),'IF':([0,2,4,5,6,8,9,11,12,13,14,15,16,17,18,19,21,25,28,29,35,42,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,100,101,102,104,105,106,107,108,109,110,112,113,117,118,121,123,127,128,129,130,133,134,139,],[23,23,-4,-27,-74,-39,-41,-34,-5,-6,-7,-8,-9,-10,-38,-37,-64,23,23,-3,-29,-64,23,-2,-44,-37,-39,-41,-48,-34,-8,-6,-7,-10,-54,-55,23,-57,-5,-9,-64,-15,-25,-39,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,-74,23,-74,-74,-74,-74,-74,-74,23,-66,-11,-12,-13,-14,23,-19,-20,-21,-22,-23,-24,-62,23,-74,-40,23,23,-16,23,23,23,23,-42,-68,]),'FOR':([0,2,4,5,6,8,9,11,12,13,14,15,16,17,18,19,21,25,28,29,35,42,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,100,101,102,104,105,106,107,108,109,110,112,113,117,118,121,123,127,128,129,130,133,134,139,],[24,24,-4,-27,-74,-39,-41,-34,-5,-6,-7,-8,-9,-10,-38,-37,-64,24,24,-3,-29,-64,24,-2,-44,-37,-39,-41,-48,-34,-8,-6,-7,-10,-54,-55,24,-57,-5,-9,-64,-15,-25,-39,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,-74,24,-74,-74,-74,-74,-74,-74,24,-66,-11,-12,-13,-14,24,-19,-20,-21,-22,-23,-24,-62,24,-74,-40,24,24,-16,24,24,24,24,-42,-68,]),'WHILE':([0,2,4,5,6,8,9,11,12,13,14,15,16,17,18,19,21,25,28,29,35,42,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,100,101,102,104,105,106,107,108,109,110,112,113,117,118,121,123,127,128,129,130,133,134,139,],[26,26,-4,-27,-74,-39,-41,-34,-5,-6,-7,-8,-9,-10,-38,-37,-64,26,26,-3,-29,-64,93,-2,-44,-37,-39,-41,-48,-34,-8,-6,-7,-10,-54,-55,26,-57,-5,-9,-64,-15,-25,-39,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,-74,26,-74,-74,-74,-74,-74,-74,26,-66,-11,-12,-13,-14,26,-19,-20,-21,-22,-23,-24,-62,26,-74,-40,26,26,-16,26,26,26,26,-42,-68,]),'DO':([0,2,4,5,6,8,9,11,12,13,14,15,16,17,18,19,21,25,28,29,35,42,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,117,118,121,123,127,128,129,130,133,134,139,],[25,25,-4,-27,-74,-39,-41,-34,-5,-6,-7,-8,-9,-10,-38,-37,-64,25,25,-3,-29,-64,25,94,-2,-44,-37,-39,-41,-48,-34,-8,-6,-7,-10,-54,-55,25,-57,-5,-9,-64,-15,-25,-39,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,-74,25,-74,-74,-74,-74,-74,-74,-74,25,-66,-11,-12,-13,-14,25,-19,-20,-21,-22,-23,-24,123,94,25,-74,-40,25,25,-16,25,25,25,25,-42,-68,]),'FUNCTION':([0,2,4,5,6,8,9,11,12,13,14,15,16,17,18,19,21,25,28,29,35,42,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,100,101,102,104,105,106,107,108,109,110,112,113,117,118,121,123,127,128,129,130,133,134,139,],[27,27,-4,-27,-74,-39,-41,-34,-5,-6,-7,-8,-9,-10,-38,-37,-64,27,27,-3,-29,-64,27,-2,-44,-37,-39,-41,-48,-34,-8,-6,-7,-10,-54,-55,27,-57,-5,-9,-64,-15,-25,-39,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,-74,27,-74,-74,-74,-74,-74,-74,27,-66,-11,-12,-13,-14,27,-19,-20,-21,-22,-23,-24,-62,27,-74,-40,27,27,-16,27,27,27,27,-42,-68,]),'SHOW':([0,2,4,5,6,8,9,11,12,13,14,15,16,17,18,19,21,25,28,29,35,42,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,100,101,102,104,105,106,107,108,109,110,112,113,117,118,121,123,127,128,129,130,133,134,139,],[28,28,-4,-27,-74,-39,-41,-34,-5,-6,-7,-8,-9,-10,-38,-37,-64,28,28,-3,-29,-64,28,-2,-44,-37,-39,-41,-48,-34,-8,-6,-7,-10,-54,-55,28,-57,-5,-9,-64,-15,-25,-39,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,103,28,-74,-74,-74,-74,-74,-74,28,-66,-11,-12,-13,-14,28,-19,-20,-21,-22,-23,-24,-62,28,103,-40,28,28,-16,28,28,28,28,-42,-68,]),'PLUS':([0,3,5,6,7,8,9,10,11,18,19,20,21,23,26,28,35,36,41,42,45,50,52,53,54,55,56,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,93,97,98,99,101,102,105,106,107,108,109,110,117,118,137,140,],[-74,30,-27,-74,-74,-39,-41,39,-34,-38,-37,-74,-64,-74,-74,-74,30,30,30,-64,30,30,-37,-39,-41,39,-34,-64,-25,-39,-74,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,-74,-74,-74,-74,-74,-74,-74,-74,30,30,30,-41,-39,30,30,30,30,30,30,-74,-40,-74,30,]),'MINUS':([0,3,5,6,7,8,9,11,18,19,20,21,23,26,28,35,36,41,42,45,50,52,53,54,56,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,93,97,98,99,101,102,105,106,107,108,109,110,117,118,137,140,],[-74,31,-27,-74,-74,37,38,-34,-38,-37,-74,-64,-74,-74,-74,31,31,31,-64,31,31,-37,37,38,-34,-64,-25,-39,-74,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,-74,-74,-74,-74,-74,-74,-74,-74,31,31,31,38,37,31,31,31,31,31,31,-74,-40,-74,31,]),'POWER':([0,3,5,6,7,8,9,11,18,19,20,21,23,26,28,35,36,41,42,45,50,52,53,54,56,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,93,97,98,99,101,102,105,106,107,108,109,110,117,118,137,140,],[-74,32,-27,-74,-74,-39,-41,-34,-38,-37,-74,-64,-74,-74,-74,32,32,32,-64,32,32,-37,-39,-41,-34,-64,-25,-39,-74,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,-74,-74,-74,-74,-74,-74,-74,-74,32,32,32,-41,-39,32,32,32,32,32,32,-74,-40,-74,32,]),'$end':([0,1,2,3,4,5,6,8,9,11,12,13,14,15,16,17,18,19,21,28,29,35,42,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,98,99,100,101,102,105,106,107,108,109,110,112,113,117,118,127,129,134,139,],[-74,0,-1,-2,-4,-27,-74,-39,-41,-34,-5,-6,-7,-8,-9,-10,-38,-37,-64,-74,-3,-29,-64,-2,-44,-37,-39,-41,-48,-34,-8,-6,-7,-10,-54,-55,-1,-57,-5,-9,-64,-15,-25,-39,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,-74,-74,-74,-74,-74,-74,-74,-66,-11,-12,-13,-14,-19,-20,-21,-22,-23,-24,-62,-61,-74,-40,-16,-60,-42,-68,]),'ELSE':([4,5,6,8,9,11,12,13,14,15,16,17,18,19,21,28,29,35,42,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,98,99,100,101,102,104,105,106,107,108,109,110,112,113,117,118,127,129,134,139,],[-4,-27,-74,-39,-41,-34,-5,-6,-7,-8,-9,-10,-38,-37,-64,-74,-3,-29,-64,-2,-44,-37,-39,-41,-48,-34,-8,-6,-7,-10,-54,-55,-1,-57,-5,-9,-64,-15,-25,-39,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,-74,-74,-74,-74,-74,-74,-74,-66,-11,-12,-13,-14,121,-19,-20,-21,-22,-23,-24,-62,-61,-74,-40,-16,-60,-42,-68,]),'END':([4,5,6,8,9,11,12,13,14,15,16,17,18,19,21,28,29,35,42,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,98,99,100,101,102,104,105,106,107,108,109,110,112,113,117,118,120,122,127,128,129,134,139,],[-4,-27,-74,-39,-41,-34,-5,-6,-7,-8,-9,-10,-38,-37,-64,-74,-3,-29,-64,-2,-44,-37,-39,-41,-48,-34,-8,-6,-7,-10,-54,-55,-1,-57,-5,-9,-64,-15,-25,-39,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,-74,-74,-74,-74,-74,-74,-74,-66,-11,-12,-13,-14,-74,-19,-20,-21,-22,-23,-24,-62,-61,-74,-40,127,-18,-16,-17,-60,-42,-68,]),'RBRACE':([4,5,6,8,9,11,12,13,14,15,16,17,18,19,21,28,29,35,42,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,98,99,100,101,102,105,106,107,108,109,110,112,113,117,118,127,129,133,134,135,136,137,138,139,140,],[-4,-27,-74,-39,-41,-34,-5,-6,-7,-8,-9,-10,-38,-37,-64,-74,-3,-29,-64,-2,-44,-37,-39,-41,-48,-34,-8,-6,-7,-10,-54,-55,-1,-57,-5,-9,-64,-15,-25,-39,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,-74,-74,-74,-74,-74,-74,-74,-66,-11,-12,-13,-14,-19,-20,-21,-22,-23,-24,-62,-61,-74,-40,-16,-60,135,-42,-74,139,-74,-73,-68,-72,]),'RPAREN':([5,6,7,8,9,11,18,19,21,35,36,70,71,72,73,74,75,76,77,78,79,80,81,82,95,97,114,115,116,118,131,132,],[-27,-74,-74,-39,-41,-34,-38,-37,-64,-29,78,-25,-39,-74,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,118,-69,124,-71,-40,-70,134,]),'RBRACKET':([5,6,8,9,11,18,19,20,21,35,40,41,42,70,71,73,74,75,76,77,78,79,80,81,82,83,98,118,],[-27,-74,-39,-41,-34,-38,-37,-74,-64,-29,82,-65,-64,-25,-39,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,-66,-40,]),'COMMA':([5,6,8,9,11,18,19,20,21,28,35,40,41,42,50,52,53,54,56,64,67,70,71,73,74,75,76,77,78,79,80,81,82,83,84,95,98,99,100,101,102,114,115,116,117,118,131,],[-27,-74,-39,-41,-34,-38,-37,-74,-64,-74,-29,83,-65,-64,-65,-37,-39,-41,-34,83,-64,-25,-39,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,-74,-74,-66,-65,83,-41,-39,-69,125,-71,-74,-40,-70,]),'IS_LESS_THAN':([5,6,8,9,11,18,19,21,23,26,35,45,70,71,73,74,75,76,77,78,79,80,81,82,93,118,],[-27,-74,-39,-41,-34,-38,-37,-64,-74,-74,-29,86,-25,-39,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,-40,]),'IS_EQUAL_TO':([5,6,8,9,11,18,19,21,23,26,35,45,70,71,73,74,75,76,77,78,79,80,81,82,93,118,],[-27,-74,-39,-41,-34,-38,-37,-64,-74,-74,-29,87,-25,-39,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,-40,]),'IS_GREATER_THAN':([5,6,8,9,11,18,19,21,23,26,35,45,70,71,73,74,75,76,77,78,79,80,81,82,93,118,],[-27,-74,-39,-41,-34,-38,-37,-64,-74,-74,-29,88,-25,-39,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,-40,]),'IS_NOT_EQUAL_TO':([5,6,8,9,11,18,19,21,23,26,35,45,70,71,73,74,75,76,77,78,79,80,81,82,93,118,],[-27,-74,-39,-41,-34,-38,-37,-64,-74,-74,-29,89,-25,-39,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,-40,]),'GREATER_THAN_OR_EQUAL_TO':([5,6,8,9,11,18,19,21,23,26,35,45,70,71,73,74,75,76,77,78,79,80,81,82,93,118,],[-27,-74,-39,-41,-34,-38,-37,-64,-74,-74,-29,90,-25,-39,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,-40,]),'LESS_THAN_OR_EQUAL_TO':([5,6,8,9,11,18,19,21,23,26,35,45,70,71,73,74,75,76,77,78,79,80,81,82,93,118,],[-27,-74,-39,-41,-34,-38,-37,-64,-74,-74,-29,91,-25,-39,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,-40,]),'THEN':([5,6,8,9,11,18,19,21,35,44,70,71,73,74,75,76,77,78,79,80,81,82,86,87,88,89,90,91,105,106,107,108,109,110,118,],[-27,-74,-39,-41,-34,-38,-37,-64,-29,85,-25,-39,-41,-26,-28,-35,-36,-30,-31,-32,-33,-63,-74,-74,-74,-74,-74,-74,-19,-20,-21,-22,-23,-24,-40,]),'TIMES':([5,8,9,18,19,52,53,54,70,71,73,74,75,76,77,78,79,80,81,101,102,118,],[33,-39,-41,-38,-37,-37,-39,-41,33,-39,-41,33,33,-35,-36,-40,33,33,33,-41,-39,-40,]),'DIVIDE':([5,8,9,18,19,52,53,54,70,71,73,74,75,76,77,78,79,80,81,101,102,118,],[34,-39,-41,-38,-37,-37,-39,-41,34,-39,-41,34,34,-35,-36,-40,34,34,34,-41,-39,-40,]),'STRING_LITERAL':([28,126,],[51,132,]),'COMMENT':([28,],[69,]),'EQUAL':([43,96,],[84,117,]),'IN':([46,],[92,]),'LBRACE':([124,],[130,]),'RETURN':([135,],[137,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,28,],[1,62,]),'statements':([0,25,28,85,94,121,123,130,],[2,47,63,104,113,128,129,133,]),'expression':([0,6,7,20,23,26,28,72,83,84,86,87,88,89,90,91,93,117,137,],[3,35,36,41,45,45,50,97,98,99,105,106,107,108,109,110,45,99,140,]),'statement':([0,2,25,28,47,63,85,94,104,113,121,123,128,129,130,133,],[4,29,4,4,29,29,4,4,29,29,4,4,29,29,4,29,]),'term':([0,6,7,20,23,26,28,30,31,32,37,38,39,72,83,84,86,87,88,89,90,91,93,117,137,],[5,5,5,5,5,5,5,70,74,75,79,80,81,5,5,5,5,5,5,5,5,5,5,5,5,]),'list':([0,6,7,20,23,26,28,72,83,84,86,87,88,89,90,91,92,93,117,137,],[11,11,11,11,11,11,56,11,11,11,11,11,11,11,11,11,111,11,11,11,]),'assignment':([0,2,25,28,47,63,85,94,104,113,121,123,128,129,130,133,],[12,12,12,65,12,12,12,12,12,12,12,12,12,12,12,12,]),'conditional':([0,2,25,28,47,63,85,94,104,113,121,123,128,129,130,133,],[13,13,13,58,13,13,13,13,13,13,13,13,13,13,13,13,]),'loop':([0,2,25,28,47,63,85,94,104,113,121,123,128,129,130,133,],[14,14,14,59,14,14,14,14,14,14,14,14,14,14,14,14,]),'function':([0,2,25,28,47,63,85,94,104,113,121,123,128,129,130,133,],[15,15,15,57,15,15,15,15,15,15,15,15,15,15,15,15,]),'display':([0,2,25,28,47,63,85,94,104,113,121,123,128,129,130,133,],[16,16,16,66,16,16,16,16,16,16,16,16,16,16,16,16,]),'input':([0,2,25,28,47,63,85,94,104,113,121,123,128,129,130,133,],[17,17,17,60,17,17,17,17,17,17,17,17,17,17,17,17,]),'factor':([0,6,7,20,23,26,28,30,31,32,33,34,37,38,39,72,83,84,86,87,88,89,90,91,93,117,137,],[18,18,18,18,18,18,18,18,18,18,76,77,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'empty':([0,6,7,20,23,26,28,72,83,84,86,87,88,89,90,91,92,93,95,104,117,135,137,],[21,21,21,42,21,21,67,21,21,42,21,21,21,21,21,21,21,21,116,122,42,138,21,]),'expression_list':([20,28,84,117,],[40,64,100,100,]),'condition':([23,26,93,],[44,48,112,]),'comment':([28,],[61,]),'parameters':([95,],[115,]),'else_statements_opt':([104,],[120,]),'return_statement_opt':([135,],[136,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','yacc.py',39),
  ('program -> expression','program',1,'p_program','yacc.py',40),
  ('statements -> statements statement','statements',2,'p_statements','yacc.py',46),
  ('statements -> statement','statements',1,'p_statements','yacc.py',47),
  ('statement -> assignment','statement',1,'p_statement','yacc.py',59),
  ('statement -> conditional','statement',1,'p_statement','yacc.py',60),
  ('statement -> loop','statement',1,'p_statement','yacc.py',61),
  ('statement -> function','statement',1,'p_statement','yacc.py',62),
  ('statement -> display','statement',1,'p_statement','yacc.py',63),
  ('statement -> input','statement',1,'p_statement','yacc.py',64),
  ('assignment -> LET IDENTIFIER EQUAL expression','assignment',4,'p_assignment','yacc.py',71),
  ('assignment -> LET IDENTIFIER EQUAL expression_list','assignment',4,'p_assignment','yacc.py',72),
  ('assignment -> LET IDENTIFIER EQUAL REAL','assignment',4,'p_assignment','yacc.py',73),
  ('assignment -> LET IDENTIFIER EQUAL NUMBER','assignment',4,'p_assignment','yacc.py',74),
  ('comment -> COMMENT','comment',1,'p_comment','yacc.py',82),
  ('conditional -> IF condition THEN statements else_statements_opt END','conditional',6,'p_conditional','yacc.py',88),
  ('else_statements_opt -> ELSE statements','else_statements_opt',2,'p_else_statements_opt','yacc.py',94),
  ('else_statements_opt -> empty','else_statements_opt',1,'p_else_statements_opt','yacc.py',95),
  ('condition -> expression IS_LESS_THAN expression','condition',3,'p_condition','yacc.py',103),
  ('condition -> expression IS_EQUAL_TO expression','condition',3,'p_condition','yacc.py',104),
  ('condition -> expression IS_GREATER_THAN expression','condition',3,'p_condition','yacc.py',105),
  ('condition -> expression IS_NOT_EQUAL_TO expression','condition',3,'p_condition','yacc.py',106),
  ('condition -> expression GREATER_THAN_OR_EQUAL_TO expression','condition',3,'p_condition','yacc.py',107),
  ('condition -> expression LESS_THAN_OR_EQUAL_TO expression','condition',3,'p_condition','yacc.py',108),
  ('expression -> expression PLUS term','expression',3,'p_expression','yacc.py',114),
  ('expression -> expression MINUS term','expression',3,'p_expression','yacc.py',115),
  ('expression -> term','expression',1,'p_expression','yacc.py',116),
  ('expression -> expression POWER term','expression',3,'p_expression','yacc.py',117),
  ('expression -> NOT expression','expression',2,'p_expression','yacc.py',118),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','yacc.py',119),
  ('expression -> NUMBER MINUS term','expression',3,'p_expression','yacc.py',120),
  ('expression -> REAL MINUS term','expression',3,'p_expression','yacc.py',121),
  ('expression -> CHARACTER PLUS term','expression',3,'p_expression','yacc.py',122),
  ('expression -> list','expression',1,'p_expression','yacc.py',123),
  ('term -> term TIMES factor','term',3,'p_term','yacc.py',150),
  ('term -> term DIVIDE factor','term',3,'p_term','yacc.py',151),
  ('term -> IDENTIFIER','term',1,'p_term','yacc.py',152),
  ('term -> factor','term',1,'p_term','yacc.py',153),
  ('factor -> NUMBER','factor',1,'p_factor','yacc.py',169),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','yacc.py',170),
  ('factor -> REAL','factor',1,'p_factor','yacc.py',171),
  ('input -> LET IDENTIFIER EQUAL SHOW IDENTIFIER LPAREN STRING_LITERAL RPAREN','input',8,'p_input','yacc.py',180),
  ('display -> SHOW expression','display',2,'p_display','yacc.py',186),
  ('display -> SHOW STRING_LITERAL','display',2,'p_display','yacc.py',187),
  ('display -> SHOW IDENTIFIER','display',2,'p_display','yacc.py',188),
  ('display -> SHOW NUMBER','display',2,'p_display','yacc.py',189),
  ('display -> SHOW REAL','display',2,'p_display','yacc.py',190),
  ('display -> SHOW CHARACTER','display',2,'p_display','yacc.py',191),
  ('display -> SHOW list','display',2,'p_display','yacc.py',192),
  ('display -> SHOW function','display',2,'p_display','yacc.py',193),
  ('display -> SHOW conditional','display',2,'p_display','yacc.py',194),
  ('display -> SHOW loop','display',2,'p_display','yacc.py',195),
  ('display -> SHOW input','display',2,'p_display','yacc.py',196),
  ('display -> SHOW comment','display',2,'p_display','yacc.py',197),
  ('display -> SHOW program','display',2,'p_display','yacc.py',198),
  ('display -> SHOW statements','display',2,'p_display','yacc.py',199),
  ('display -> SHOW expression_list','display',2,'p_display','yacc.py',200),
  ('display -> SHOW assignment','display',2,'p_display','yacc.py',201),
  ('display -> SHOW display','display',2,'p_display','yacc.py',202),
  ('loop -> FOR IDENTIFIER IN list DO statements','loop',6,'p_loop','yacc.py',208),
  ('loop -> WHILE condition DO statements','loop',4,'p_loop','yacc.py',209),
  ('loop -> DO statements WHILE condition','loop',4,'p_loop','yacc.py',210),
  ('list -> LBRACKET expression_list RBRACKET','list',3,'p_list','yacc.py',217),
  ('list -> empty','list',1,'p_list','yacc.py',218),
  ('expression_list -> expression','expression_list',1,'p_expression_list','yacc.py',226),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','yacc.py',227),
  ('expression_list -> empty','expression_list',1,'p_expression_list','yacc.py',228),
  ('function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE return_statement_opt RBRACE','function',10,'p_function','yacc.py',237),
  ('parameters -> IDENTIFIER','parameters',1,'p_parameters','yacc.py',243),
  ('parameters -> parameters COMMA IDENTIFIER','parameters',3,'p_parameters','yacc.py',244),
  ('parameters -> empty','parameters',1,'p_parameters','yacc.py',245),
  ('return_statement_opt -> RETURN expression','return_statement_opt',2,'p_return_statement_opt','yacc.py',254),
  ('return_statement_opt -> empty','return_statement_opt',1,'p_return_statement_opt','yacc.py',255),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',263),
]
