
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programnonassocIS_LESS_THANIS_GREATER_THANIS_EQUAL_TOIS_NOT_EQUAL_TOGREATER_THAN_OR_EQUAL_TOLESS_THAN_OR_EQUAL_TOleftPLUSMINUSleftTIMESDIVIDErightPOWERAND CHARACTER COMMA COMMENT DECREASE DIVIDE DO ELSE END EQUAL FALSE FOR FUNCTION GREATER_THAN_OR_EQUAL_TO IDENTIFIER IF IN INCREASE INTEGER IS_EQUAL_TO IS_GREATER_THAN IS_LESS_THAN IS_NOT_EQUAL_TO JOIN LBRACE LBRACKET LESS_THAN_OR_EQUAL_TO LET LETTER LPAREN MINUS NOT NUMBER OR PLUS POWER RBRACE RBRACKET REAL RETURN RISK RPAREN SAVE SHOW STRING_LITERAL THEN TIMES TRUE WHILE\n    program : statements\n            | expression\n    \n    statements : statements statement\n               | statement\n    \n    statement : assignment\n              | conditional\n              | loop\n              | function\n              | display\n              | input\n    \n    assignment : LET IDENTIFIER EQUAL expression\n    \n    comment : COMMENT\n    \n    conditional : IF condition THEN statements else_statements_opt END\n    \n    else_statements_opt : ELSE statements\n                        | empty\n    \n    condition : expression IS_LESS_THAN expression\n              | expression IS_EQUAL_TO expression\n              | expression IS_GREATER_THAN expression\n              | expression IS_NOT_EQUAL_TO expression\n              | expression GREATER_THAN_OR_EQUAL_TO expression\n              | expression LESS_THAN_OR_EQUAL_TO expression\n    \n    expression : expression PLUS term\n               | expression MINUS term\n               | term\n               | expression POWER term\n               | NOT expression\n               | LPAREN expression RPAREN\n               | NUMBER MINUS term\n               | REAL MINUS term\n               | CHARACTER PLUS term\n               | list\n    \n    term : term TIMES factor\n         | term DIVIDE factor\n         | IDENTIFIER\n         | factor\n    \n    factor : NUMBER\n           | LPAREN expression RPAREN\n           | REAL\n    \n    input : LET IDENTIFIER EQUAL SHOW IDENTIFIER LPAREN STRING_LITERAL RPAREN\n    \n    display : SHOW expression\n            | SHOW STRING_LITERAL\n            | SHOW IDENTIFIER\n            | SHOW NUMBER\n            | SHOW REAL\n            | SHOW CHARACTER\n            | SHOW list\n            | SHOW function\n            | SHOW conditional\n            | SHOW loop\n            | SHOW input\n            | SHOW comment\n            | SHOW program\n            | SHOW statements\n            | SHOW expression_list\n            | SHOW assignment\n            | SHOW display\n    \n    loop : FOR IDENTIFIER IN list DO statements\n         | WHILE condition DO statements\n         | DO statements WHILE condition\n    \n    list : LBRACKET expression_list RBRACKET\n         | empty\n    \n    expression_list : expression\n                    | expression_list COMMA expression\n                    | empty\n    \n    function : FUNCTION IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE return_statement_opt RBRACE\n    \n    parameters : IDENTIFIER\n               | parameters COMMA IDENTIFIER\n               | empty\n    \n    return_statement_opt : RETURN expression\n                         | empty\n    \n    empty : \n    '
    
_lr_action_items = {'NOT':([0,6,7,20,23,26,28,72,83,84,86,87,88,89,90,91,93,114,134,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'LPAREN':([0,6,7,20,23,26,28,30,31,32,33,34,37,38,39,49,72,83,84,86,87,88,89,90,91,93,114,116,134,],[7,7,7,7,7,7,7,72,72,72,72,72,72,72,72,95,7,7,7,7,7,7,7,7,7,7,7,123,7,]),'NUMBER':([0,6,7,20,23,26,28,30,31,32,33,34,37,38,39,72,83,84,86,87,88,89,90,91,93,114,134,],[8,8,8,8,8,8,53,71,71,71,71,71,71,71,71,8,8,8,8,8,8,8,8,8,8,8,8,]),'REAL':([0,6,7,20,23,26,28,30,31,32,33,34,37,38,39,72,83,84,86,87,88,89,90,91,93,114,134,],[9,9,9,9,9,9,54,73,73,73,73,73,73,73,73,9,9,9,9,9,9,9,9,9,9,9,9,]),'CHARACTER':([0,6,7,20,23,26,28,72,83,84,86,87,88,89,90,91,93,114,134,],[10,10,10,10,10,10,55,10,10,10,10,10,10,10,10,10,10,10,10,]),'IDENTIFIER':([0,6,7,20,22,23,24,26,27,28,30,31,32,37,38,39,68,72,83,84,86,87,88,89,90,91,93,95,100,114,122,134,],[19,19,19,19,43,19,46,19,49,52,19,19,19,19,19,19,96,19,19,19,19,19,19,19,19,19,19,111,116,19,128,19,]),'LBRACKET':([0,6,7,20,23,26,28,72,83,84,86,87,88,89,90,91,92,93,114,134,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'LET':([0,2,4,5,6,8,9,11,12,13,14,15,16,17,18,19,21,25,28,29,35,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,101,102,103,104,105,106,107,109,110,114,115,118,120,124,125,126,127,130,131,136,],[22,22,-4,-24,-71,-36,-38,-31,-5,-6,-7,-8,-9,-10,-35,-34,-61,22,68,-3,-26,22,-2,-41,-34,-36,-38,-45,-31,-8,-6,-7,-10,-51,-52,22,-54,-5,-9,-61,-12,-22,-36,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,-71,22,-71,-71,-71,-71,-71,-71,22,-63,-11,22,-16,-17,-18,-19,-20,-21,-59,22,-71,-37,22,22,-13,22,22,22,22,-39,-65,]),'IF':([0,2,4,5,6,8,9,11,12,13,14,15,16,17,18,19,21,25,28,29,35,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,101,102,103,104,105,106,107,109,110,114,115,118,120,124,125,126,127,130,131,136,],[23,23,-4,-24,-71,-36,-38,-31,-5,-6,-7,-8,-9,-10,-35,-34,-61,23,23,-3,-26,23,-2,-41,-34,-36,-38,-45,-31,-8,-6,-7,-10,-51,-52,23,-54,-5,-9,-61,-12,-22,-36,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,-71,23,-71,-71,-71,-71,-71,-71,23,-63,-11,23,-16,-17,-18,-19,-20,-21,-59,23,-71,-37,23,23,-13,23,23,23,23,-39,-65,]),'FOR':([0,2,4,5,6,8,9,11,12,13,14,15,16,17,18,19,21,25,28,29,35,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,101,102,103,104,105,106,107,109,110,114,115,118,120,124,125,126,127,130,131,136,],[24,24,-4,-24,-71,-36,-38,-31,-5,-6,-7,-8,-9,-10,-35,-34,-61,24,24,-3,-26,24,-2,-41,-34,-36,-38,-45,-31,-8,-6,-7,-10,-51,-52,24,-54,-5,-9,-61,-12,-22,-36,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,-71,24,-71,-71,-71,-71,-71,-71,24,-63,-11,24,-16,-17,-18,-19,-20,-21,-59,24,-71,-37,24,24,-13,24,24,24,24,-39,-65,]),'WHILE':([0,2,4,5,6,8,9,11,12,13,14,15,16,17,18,19,21,25,28,29,35,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,101,102,103,104,105,106,107,109,110,114,115,118,120,124,125,126,127,130,131,136,],[26,26,-4,-24,-71,-36,-38,-31,-5,-6,-7,-8,-9,-10,-35,-34,-61,26,26,-3,-26,93,-2,-41,-34,-36,-38,-45,-31,-8,-6,-7,-10,-51,-52,26,-54,-5,-9,-61,-12,-22,-36,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,-71,26,-71,-71,-71,-71,-71,-71,26,-63,-11,26,-16,-17,-18,-19,-20,-21,-59,26,-71,-37,26,26,-13,26,26,26,26,-39,-65,]),'DO':([0,2,4,5,6,8,9,11,12,13,14,15,16,17,18,19,21,25,28,29,35,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,98,99,101,102,103,104,105,106,107,108,109,110,114,115,118,120,124,125,126,127,130,131,136,],[25,25,-4,-24,-71,-36,-38,-31,-5,-6,-7,-8,-9,-10,-35,-34,-61,25,25,-3,-26,25,94,-2,-41,-34,-36,-38,-45,-31,-8,-6,-7,-10,-51,-52,25,-54,-5,-9,-61,-12,-22,-36,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,-71,25,-71,-71,-71,-71,-71,-71,-71,25,-63,-11,25,-16,-17,-18,-19,-20,-21,120,94,25,-71,-37,25,25,-13,25,25,25,25,-39,-65,]),'FUNCTION':([0,2,4,5,6,8,9,11,12,13,14,15,16,17,18,19,21,25,28,29,35,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,101,102,103,104,105,106,107,109,110,114,115,118,120,124,125,126,127,130,131,136,],[27,27,-4,-24,-71,-36,-38,-31,-5,-6,-7,-8,-9,-10,-35,-34,-61,27,27,-3,-26,27,-2,-41,-34,-36,-38,-45,-31,-8,-6,-7,-10,-51,-52,27,-54,-5,-9,-61,-12,-22,-36,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,-71,27,-71,-71,-71,-71,-71,-71,27,-63,-11,27,-16,-17,-18,-19,-20,-21,-59,27,-71,-37,27,27,-13,27,27,27,27,-39,-65,]),'SHOW':([0,2,4,5,6,8,9,11,12,13,14,15,16,17,18,19,21,25,28,29,35,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,101,102,103,104,105,106,107,109,110,114,115,118,120,124,125,126,127,130,131,136,],[28,28,-4,-24,-71,-36,-38,-31,-5,-6,-7,-8,-9,-10,-35,-34,-61,28,28,-3,-26,28,-2,-41,-34,-36,-38,-45,-31,-8,-6,-7,-10,-51,-52,28,-54,-5,-9,-61,-12,-22,-36,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,100,28,-71,-71,-71,-71,-71,-71,28,-63,-11,28,-16,-17,-18,-19,-20,-21,-59,28,100,-37,28,28,-13,28,28,28,28,-39,-65,]),'PLUS':([0,3,5,6,7,8,9,10,11,18,19,20,21,23,26,28,35,36,41,42,45,50,52,53,54,55,56,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,93,97,98,99,102,103,104,105,106,107,114,115,134,137,],[-71,30,-24,-71,-71,-36,-38,39,-31,-35,-34,-71,-61,-71,-71,-71,30,30,30,-61,30,30,-34,-36,-38,39,-31,-61,-22,-36,-71,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,-71,-71,-71,-71,-71,-71,-71,-71,30,30,30,30,30,30,30,30,30,-71,-37,-71,30,]),'MINUS':([0,3,5,6,7,8,9,11,18,19,20,21,23,26,28,35,36,41,42,45,50,52,53,54,56,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,93,97,98,99,102,103,104,105,106,107,114,115,134,137,],[-71,31,-24,-71,-71,37,38,-31,-35,-34,-71,-61,-71,-71,-71,31,31,31,-61,31,31,-34,37,38,-31,-61,-22,-36,-71,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,-71,-71,-71,-71,-71,-71,-71,-71,31,31,31,31,31,31,31,31,31,-71,-37,-71,31,]),'POWER':([0,3,5,6,7,8,9,11,18,19,20,21,23,26,28,35,36,41,42,45,50,52,53,54,56,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,93,97,98,99,102,103,104,105,106,107,114,115,134,137,],[-71,32,-24,-71,-71,-36,-38,-31,-35,-34,-71,-61,-71,-71,-71,32,32,32,-61,32,32,-34,-36,-38,-31,-61,-22,-36,-71,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,-71,-71,-71,-71,-71,-71,-71,-71,32,32,32,32,32,32,32,32,32,-71,-37,-71,32,]),'$end':([0,1,2,3,4,5,6,8,9,11,12,13,14,15,16,17,18,19,21,28,29,35,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,98,99,102,103,104,105,106,107,109,110,114,115,124,126,131,136,],[-71,0,-1,-2,-4,-24,-71,-36,-38,-31,-5,-6,-7,-8,-9,-10,-35,-34,-61,-71,-3,-26,-2,-41,-34,-36,-38,-45,-31,-8,-6,-7,-10,-51,-52,-1,-54,-5,-9,-61,-12,-22,-36,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,-71,-71,-71,-71,-71,-71,-71,-63,-11,-16,-17,-18,-19,-20,-21,-59,-58,-71,-37,-13,-57,-39,-65,]),'ELSE':([4,5,6,8,9,11,12,13,14,15,16,17,18,19,21,28,29,35,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,98,99,101,102,103,104,105,106,107,109,110,114,115,124,126,131,136,],[-4,-24,-71,-36,-38,-31,-5,-6,-7,-8,-9,-10,-35,-34,-61,-71,-3,-26,-2,-41,-34,-36,-38,-45,-31,-8,-6,-7,-10,-51,-52,-1,-54,-5,-9,-61,-12,-22,-36,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,-71,-71,-71,-71,-71,-71,-71,-63,-11,118,-16,-17,-18,-19,-20,-21,-59,-58,-71,-37,-13,-57,-39,-65,]),'END':([4,5,6,8,9,11,12,13,14,15,16,17,18,19,21,28,29,35,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,98,99,101,102,103,104,105,106,107,109,110,114,115,117,119,124,125,126,131,136,],[-4,-24,-71,-36,-38,-31,-5,-6,-7,-8,-9,-10,-35,-34,-61,-71,-3,-26,-2,-41,-34,-36,-38,-45,-31,-8,-6,-7,-10,-51,-52,-1,-54,-5,-9,-61,-12,-22,-36,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,-71,-71,-71,-71,-71,-71,-71,-63,-11,-71,-16,-17,-18,-19,-20,-21,-59,-58,-71,-37,124,-15,-13,-14,-57,-39,-65,]),'RBRACE':([4,5,6,8,9,11,12,13,14,15,16,17,18,19,21,28,29,35,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,98,99,102,103,104,105,106,107,109,110,114,115,124,126,130,131,132,133,134,135,136,137,],[-4,-24,-71,-36,-38,-31,-5,-6,-7,-8,-9,-10,-35,-34,-61,-71,-3,-26,-2,-41,-34,-36,-38,-45,-31,-8,-6,-7,-10,-51,-52,-1,-54,-5,-9,-61,-12,-22,-36,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,-71,-71,-71,-71,-71,-71,-71,-63,-11,-16,-17,-18,-19,-20,-21,-59,-58,-71,-37,-13,-57,132,-39,-71,136,-71,-70,-65,-69,]),'RPAREN':([5,6,7,8,9,11,18,19,21,35,36,70,71,72,73,74,75,76,77,78,79,80,81,82,95,97,111,112,113,115,128,129,],[-24,-71,-71,-36,-38,-31,-35,-34,-61,-26,78,-22,-36,-71,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,115,-66,121,-68,-37,-67,131,]),'RBRACKET':([5,6,8,9,11,18,19,20,21,35,40,41,42,70,71,73,74,75,76,77,78,79,80,81,82,83,98,115,],[-24,-71,-36,-38,-31,-35,-34,-71,-61,-26,82,-62,-61,-22,-36,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,-63,-37,]),'COMMA':([5,6,8,9,11,18,19,20,21,28,35,40,41,42,50,52,53,54,56,64,67,70,71,73,74,75,76,77,78,79,80,81,82,83,95,98,111,112,113,115,128,],[-24,-71,-36,-38,-31,-35,-34,-71,-61,-71,-26,83,-62,-61,-62,-34,-36,-38,-31,83,-61,-22,-36,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,-71,-63,-66,122,-68,-37,-67,]),'IS_LESS_THAN':([5,6,8,9,11,18,19,21,23,26,35,45,70,71,73,74,75,76,77,78,79,80,81,82,93,115,],[-24,-71,-36,-38,-31,-35,-34,-61,-71,-71,-26,86,-22,-36,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,-37,]),'IS_EQUAL_TO':([5,6,8,9,11,18,19,21,23,26,35,45,70,71,73,74,75,76,77,78,79,80,81,82,93,115,],[-24,-71,-36,-38,-31,-35,-34,-61,-71,-71,-26,87,-22,-36,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,-37,]),'IS_GREATER_THAN':([5,6,8,9,11,18,19,21,23,26,35,45,70,71,73,74,75,76,77,78,79,80,81,82,93,115,],[-24,-71,-36,-38,-31,-35,-34,-61,-71,-71,-26,88,-22,-36,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,-37,]),'IS_NOT_EQUAL_TO':([5,6,8,9,11,18,19,21,23,26,35,45,70,71,73,74,75,76,77,78,79,80,81,82,93,115,],[-24,-71,-36,-38,-31,-35,-34,-61,-71,-71,-26,89,-22,-36,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,-37,]),'GREATER_THAN_OR_EQUAL_TO':([5,6,8,9,11,18,19,21,23,26,35,45,70,71,73,74,75,76,77,78,79,80,81,82,93,115,],[-24,-71,-36,-38,-31,-35,-34,-61,-71,-71,-26,90,-22,-36,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,-37,]),'LESS_THAN_OR_EQUAL_TO':([5,6,8,9,11,18,19,21,23,26,35,45,70,71,73,74,75,76,77,78,79,80,81,82,93,115,],[-24,-71,-36,-38,-31,-35,-34,-61,-71,-71,-26,91,-22,-36,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,-37,]),'THEN':([5,6,8,9,11,18,19,21,35,44,70,71,73,74,75,76,77,78,79,80,81,82,86,87,88,89,90,91,102,103,104,105,106,107,115,],[-24,-71,-36,-38,-31,-35,-34,-61,-26,85,-22,-36,-38,-23,-25,-32,-33,-27,-28,-29,-30,-60,-71,-71,-71,-71,-71,-71,-16,-17,-18,-19,-20,-21,-37,]),'TIMES':([5,8,9,18,19,52,53,54,70,71,73,74,75,76,77,78,79,80,81,115,],[33,-36,-38,-35,-34,-34,-36,-38,33,-36,-38,33,33,-32,-33,-37,33,33,33,-37,]),'DIVIDE':([5,8,9,18,19,52,53,54,70,71,73,74,75,76,77,78,79,80,81,115,],[34,-36,-38,-35,-34,-34,-36,-38,34,-36,-38,34,34,-32,-33,-37,34,34,34,-37,]),'STRING_LITERAL':([28,123,],[51,129,]),'COMMENT':([28,],[69,]),'EQUAL':([43,96,],[84,114,]),'IN':([46,],[92,]),'LBRACE':([121,],[127,]),'RETURN':([132,],[134,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,28,],[1,62,]),'statements':([0,25,28,85,94,118,120,127,],[2,47,63,101,110,125,126,130,]),'expression':([0,6,7,20,23,26,28,72,83,84,86,87,88,89,90,91,93,114,134,],[3,35,36,41,45,45,50,97,98,99,102,103,104,105,106,107,45,99,137,]),'statement':([0,2,25,28,47,63,85,94,101,110,118,120,125,126,127,130,],[4,29,4,4,29,29,4,4,29,29,4,4,29,29,4,29,]),'term':([0,6,7,20,23,26,28,30,31,32,37,38,39,72,83,84,86,87,88,89,90,91,93,114,134,],[5,5,5,5,5,5,5,70,74,75,79,80,81,5,5,5,5,5,5,5,5,5,5,5,5,]),'list':([0,6,7,20,23,26,28,72,83,84,86,87,88,89,90,91,92,93,114,134,],[11,11,11,11,11,11,56,11,11,11,11,11,11,11,11,11,108,11,11,11,]),'assignment':([0,2,25,28,47,63,85,94,101,110,118,120,125,126,127,130,],[12,12,12,65,12,12,12,12,12,12,12,12,12,12,12,12,]),'conditional':([0,2,25,28,47,63,85,94,101,110,118,120,125,126,127,130,],[13,13,13,58,13,13,13,13,13,13,13,13,13,13,13,13,]),'loop':([0,2,25,28,47,63,85,94,101,110,118,120,125,126,127,130,],[14,14,14,59,14,14,14,14,14,14,14,14,14,14,14,14,]),'function':([0,2,25,28,47,63,85,94,101,110,118,120,125,126,127,130,],[15,15,15,57,15,15,15,15,15,15,15,15,15,15,15,15,]),'display':([0,2,25,28,47,63,85,94,101,110,118,120,125,126,127,130,],[16,16,16,66,16,16,16,16,16,16,16,16,16,16,16,16,]),'input':([0,2,25,28,47,63,85,94,101,110,118,120,125,126,127,130,],[17,17,17,60,17,17,17,17,17,17,17,17,17,17,17,17,]),'factor':([0,6,7,20,23,26,28,30,31,32,33,34,37,38,39,72,83,84,86,87,88,89,90,91,93,114,134,],[18,18,18,18,18,18,18,18,18,18,76,77,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'empty':([0,6,7,20,23,26,28,72,83,84,86,87,88,89,90,91,92,93,95,101,114,132,134,],[21,21,21,42,21,21,67,21,21,21,21,21,21,21,21,21,21,21,113,119,21,135,21,]),'expression_list':([20,28,],[40,64,]),'condition':([23,26,93,],[44,48,109,]),'comment':([28,],[61,]),'parameters':([95,],[112,]),'else_statements_opt':([101,],[117,]),'return_statement_opt':([132,],[133,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','yacc.py',39),
  ('program -> expression','program',1,'p_program','yacc.py',40),
  ('statements -> statements statement','statements',2,'p_statements','yacc.py',46),
  ('statements -> statement','statements',1,'p_statements','yacc.py',47),
  ('statement -> assignment','statement',1,'p_statement','yacc.py',59),
  ('statement -> conditional','statement',1,'p_statement','yacc.py',60),
  ('statement -> loop','statement',1,'p_statement','yacc.py',61),
  ('statement -> function','statement',1,'p_statement','yacc.py',62),
  ('statement -> display','statement',1,'p_statement','yacc.py',63),
  ('statement -> input','statement',1,'p_statement','yacc.py',64),
  ('assignment -> LET IDENTIFIER EQUAL expression','assignment',4,'p_assignment','yacc.py',71),
  ('comment -> COMMENT','comment',1,'p_comment','yacc.py',78),
  ('conditional -> IF condition THEN statements else_statements_opt END','conditional',6,'p_conditional','yacc.py',84),
  ('else_statements_opt -> ELSE statements','else_statements_opt',2,'p_else_statements_opt','yacc.py',90),
  ('else_statements_opt -> empty','else_statements_opt',1,'p_else_statements_opt','yacc.py',91),
  ('condition -> expression IS_LESS_THAN expression','condition',3,'p_condition','yacc.py',99),
  ('condition -> expression IS_EQUAL_TO expression','condition',3,'p_condition','yacc.py',100),
  ('condition -> expression IS_GREATER_THAN expression','condition',3,'p_condition','yacc.py',101),
  ('condition -> expression IS_NOT_EQUAL_TO expression','condition',3,'p_condition','yacc.py',102),
  ('condition -> expression GREATER_THAN_OR_EQUAL_TO expression','condition',3,'p_condition','yacc.py',103),
  ('condition -> expression LESS_THAN_OR_EQUAL_TO expression','condition',3,'p_condition','yacc.py',104),
  ('expression -> expression PLUS term','expression',3,'p_expression','yacc.py',110),
  ('expression -> expression MINUS term','expression',3,'p_expression','yacc.py',111),
  ('expression -> term','expression',1,'p_expression','yacc.py',112),
  ('expression -> expression POWER term','expression',3,'p_expression','yacc.py',113),
  ('expression -> NOT expression','expression',2,'p_expression','yacc.py',114),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','yacc.py',115),
  ('expression -> NUMBER MINUS term','expression',3,'p_expression','yacc.py',116),
  ('expression -> REAL MINUS term','expression',3,'p_expression','yacc.py',117),
  ('expression -> CHARACTER PLUS term','expression',3,'p_expression','yacc.py',118),
  ('expression -> list','expression',1,'p_expression','yacc.py',119),
  ('term -> term TIMES factor','term',3,'p_term','yacc.py',146),
  ('term -> term DIVIDE factor','term',3,'p_term','yacc.py',147),
  ('term -> IDENTIFIER','term',1,'p_term','yacc.py',148),
  ('term -> factor','term',1,'p_term','yacc.py',149),
  ('factor -> NUMBER','factor',1,'p_factor','yacc.py',165),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','yacc.py',166),
  ('factor -> REAL','factor',1,'p_factor','yacc.py',167),
  ('input -> LET IDENTIFIER EQUAL SHOW IDENTIFIER LPAREN STRING_LITERAL RPAREN','input',8,'p_input','yacc.py',176),
  ('display -> SHOW expression','display',2,'p_display','yacc.py',182),
  ('display -> SHOW STRING_LITERAL','display',2,'p_display','yacc.py',183),
  ('display -> SHOW IDENTIFIER','display',2,'p_display','yacc.py',184),
  ('display -> SHOW NUMBER','display',2,'p_display','yacc.py',185),
  ('display -> SHOW REAL','display',2,'p_display','yacc.py',186),
  ('display -> SHOW CHARACTER','display',2,'p_display','yacc.py',187),
  ('display -> SHOW list','display',2,'p_display','yacc.py',188),
  ('display -> SHOW function','display',2,'p_display','yacc.py',189),
  ('display -> SHOW conditional','display',2,'p_display','yacc.py',190),
  ('display -> SHOW loop','display',2,'p_display','yacc.py',191),
  ('display -> SHOW input','display',2,'p_display','yacc.py',192),
  ('display -> SHOW comment','display',2,'p_display','yacc.py',193),
  ('display -> SHOW program','display',2,'p_display','yacc.py',194),
  ('display -> SHOW statements','display',2,'p_display','yacc.py',195),
  ('display -> SHOW expression_list','display',2,'p_display','yacc.py',196),
  ('display -> SHOW assignment','display',2,'p_display','yacc.py',197),
  ('display -> SHOW display','display',2,'p_display','yacc.py',198),
  ('loop -> FOR IDENTIFIER IN list DO statements','loop',6,'p_loop','yacc.py',204),
  ('loop -> WHILE condition DO statements','loop',4,'p_loop','yacc.py',205),
  ('loop -> DO statements WHILE condition','loop',4,'p_loop','yacc.py',206),
  ('list -> LBRACKET expression_list RBRACKET','list',3,'p_list','yacc.py',213),
  ('list -> empty','list',1,'p_list','yacc.py',214),
  ('expression_list -> expression','expression_list',1,'p_expression_list','yacc.py',222),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','yacc.py',223),
  ('expression_list -> empty','expression_list',1,'p_expression_list','yacc.py',224),
  ('function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE return_statement_opt RBRACE','function',10,'p_function','yacc.py',233),
  ('parameters -> IDENTIFIER','parameters',1,'p_parameters','yacc.py',239),
  ('parameters -> parameters COMMA IDENTIFIER','parameters',3,'p_parameters','yacc.py',240),
  ('parameters -> empty','parameters',1,'p_parameters','yacc.py',241),
  ('return_statement_opt -> RETURN expression','return_statement_opt',2,'p_return_statement_opt','yacc.py',250),
  ('return_statement_opt -> empty','return_statement_opt',1,'p_return_statement_opt','yacc.py',251),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',259),
]
